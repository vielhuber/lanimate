(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var lanimate = /*#__PURE__*/function () {
  function lanimate() {
    var _this = this;

    (0, _classCallCheck2.default)(this, lanimate);
    document.addEventListener('DOMContentLoaded', function () {
      _this.ready();
    });
    window.addEventListener('load', function () {
      _this.load();
    });
  }

  (0, _createClass2.default)(lanimate, [{
    key: "ready",
    value: function ready() {
      document.head.insertAdjacentHTML('beforeend', "\n            <style>\n                [data-lanimate] {\n                    opacity: 0;\n                }\n                /* disable on mobile */\n                @media screen and (max-width: 1100px) {\n                    [data-lanimate] {\n                        transition: all 0s ease 0s;\n                        opacity: 1;\n                    }\n                    [data-lanimate='scrollX'] {\n                        transform: translateX(0px);\n                    }\n                    [data-lanimate='scrollY'] {\n                        transform: translateX(0px);\n                    }\n                    [data-lanimate='scale'] {\n                        transform: scale(1) translateY(0px);\n                    }\n                    [data-lanimate='rotate'] {\n                        transform: rotate(0deg);\n                    }\n                }\n            </style>\n            ");
    }
  }, {
    key: "traverseAllTextNodes",
    value: function traverseAllTextNodes($el, $fn) {
      var _this2 = this;

      if ($el.childNodes.length > 0) {
        $el.childNodes.forEach(function ($el2) {
          if ($el2.nodeType === 3) {
            $el2.textContent = $fn($el2.textContent);
          } else {
            _this2.traverseAllTextNodes($el2, $fn);
          }
        });
      }
    }
  }, {
    key: "load",
    value: function load() {
      var _this3 = this;

      if (document.querySelectorAll('[data-lanimate-split]').length > 0) {
        document.querySelectorAll('[data-lanimate-split]').forEach(function ($el) {
          $el.setAttribute('data-aria-label', $el.innerText.replace(/(?:\r\n|\r|\n)/g, ' '));
          $el.innerHTML = $el.innerHTML.split(' ').join('&nbsp;');
          var shift = 0;

          if ($el.getAttribute('data-lanimate-split') === 'char') {
            _this3.traverseAllTextNodes($el, function ($text) {
              return '%span%' + $text.split('').join('%/span%%span%') + '%/span%';
            });

            $el.innerHTML = $el.innerHTML.split('%span%').join('<span>').split('%/span%').join('</span>');
            shift = 100;
          }

          if ($el.getAttribute('data-lanimate-split') === 'word') {
            _this3.traverseAllTextNodes($el, function ($text) {
              return '%span%' + $text.split(' ').join('%/span% %span%') + '%/span%';
            });

            $el.innerHTML = $el.innerHTML.split('%span%').join('<span>').split('%/span%').join('</span>');
            shift = 250;
          }

          if ($el.getAttribute('data-lanimate-split') === 'line') {
            $el.innerHTML = '<span>' + $el.innerHTML.split('<br>').join('</span><br/><span>') + '</span>';
            shift = 500;
          }

          var index = 0;
          $el.querySelectorAll('span').forEach(function ($el2, i) {
            if ($el2.innerText.trim() == '') {
              return;
            }

            $el2.setAttribute('data-lanimate', $el.getAttribute('data-lanimate'));
            var delay = 0;

            if ($el.hasAttribute('data-lanimate-delay')) {
              delay = parseInt($el.getAttribute('data-lanimate-delay'));
            }

            if ($el.hasAttribute('data-lanimate-speed')) {
              $el2.setAttribute('data-lanimate-speed', $el.getAttribute('data-lanimate-speed'));
              delay *= 1 / parseInt($el.getAttribute('data-lanimate-speed'));
            }

            $el2.setAttribute('data-lanimate-delay', delay + shift * index);
            index++;
          });
          $el.removeAttribute('data-lanimate');
          $el.removeAttribute('data-lanimate-delay');
          $el.removeAttribute('data-lanimate-speed');
        });
      }

      if (document.querySelectorAll('[data-lanimate-speed]').length > 0) {
        document.querySelectorAll('[data-lanimate-speed]').forEach(function ($el) {
          var speed = parseInt($el.getAttribute('data-lanimate-speed')) / 1000;
          setTimeout(function () {
            $el.style.transitionDuration = speed + 's, ' + speed + 's';
          }, 10);
        });
      }

      if (document.querySelectorAll('[data-lanimate]').length > 0) {
        document.querySelectorAll('[data-lanimate]').forEach(function ($el) {
          _this3.start($el);

          window.addEventListener('scroll', function () {
            _this3.start($el);
          });
        });
      }

      document.head.insertAdjacentHTML('beforeend', "\n            <style>\n                [data-lanimate='fade'] {\n                }\n                [data-lanimate='scrollX'] {\n                    transform: translateX(30px);\n                }\n                [data-lanimate='scrollY'] {\n                    transform: translateY(30px);\n                }\n                [data-lanimate='scale'] {\n                    transform: scale(1.1) translateY(30px);\n                }\n                [data-lanimate='rotate'] {\n                    transform: rotate(15deg);\n                    transform-origin: 0 0;\n                }\n                [data-lanimate-started] {\n                    transition: opacity 1s ease-in-out, transform 1s ease-in-out;\n                    opacity: 1;\n                }\n                [data-lanimate-split] span {\n                    display:inline-block;\n                }\n                [data-lanimate='fade'][data-lanimate-started] {\n                }\n                [data-lanimate='scrollX'][data-lanimate-started] {\n                    transform: translateX(0px);\n                }\n                [data-lanimate='scrollY'][data-lanimate-started] {\n                    transform: translateX(0px);\n                }\n                [data-lanimate='scale'][data-lanimate-started] {\n                    transform: scale(1) translateY(0px);\n                }\n                [data-lanimate='rotate'][data-lanimate-started] {\n                    transform: rotate(0deg);\n                }\n            </style>\n            ");
    }
  }, {
    key: "start",
    value: function start($el) {
      if (!$el.hasAttribute('data-lanimate-started') && this.scrollTop() + window.innerHeight >= this.offsetTop($el)) {
        var delay = 0;

        if ($el.hasAttribute('data-lanimate-delay')) {
          delay = parseInt($el.getAttribute('data-lanimate-delay'));
        }

        setTimeout(function () {
          $el.setAttribute('data-lanimate-started', 'true');
        }, delay);
      }
    }
  }, {
    key: "scrollTop",
    value: function scrollTop() {
      var doc = document.documentElement;
      return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);
    }
  }, {
    key: "offsetTop",
    value: function offsetTop($el) {
      return $el.getBoundingClientRect().top + window.pageYOffset - document.documentElement.clientTop;
    }
  }]);
  return lanimate;
}();

exports.default = lanimate;
window.lanimate = lanimate;

},{"@babel/runtime/helpers/classCallCheck":2,"@babel/runtime/helpers/createClass":3,"@babel/runtime/helpers/interopRequireDefault":4}],2:[function(require,module,exports){
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],3:[function(require,module,exports){
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],4:[function(require,module,exports){
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
